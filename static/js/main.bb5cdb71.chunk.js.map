{"version":3,"sources":["util/createboard.js","util/mineColor.js","components/circle.js","components/Cell.js","components/Timer.js","components/TopBar.js","components/Modal.js","components/Board.js","util/reveal.js","App.js","index.js"],"names":["randomNum","min","max","Math","floor","random","mineColor","colors","length","Circle","style","display","justifyContent","alignItems","height","width","borderRadius","background","Cell","data","updateBoard","flagCell","block","color","numColorCode","value","fontWeight","fontSize","cursor","revealed","bombChexPattern","x","y","chexPattern","onClick","e","flagged","console","log","type","onClickUpdate","onContextMenu","preventDefault","onClickFlag","timeIntervalId","num","Timer","gameOver","sendTime","useState","time","setTime","sTime","setSTime","useEffect","setTimeout","clearInterval","role","paddingRight","TopBar","padding","flexDirection","paddingBottom","Modal","reset","completeTime","render","setRender","opacity","position","id","className","Board","board","setBoard","mineLocations","setMineLocations","nonMinesCount","setNonMinesCount","setGameOver","restart","setRestart","newTime","getBoard","row","col","bombs","mineLocation","subCol","push","bombsCount","roww","coll","createBoard","generateBoard","newBoardValues","JSON","parse","stringify","newNonMinesCount","i","arr","flipped","single","pop","boxShadow","map","inde","singleCell","index","App","fontFamily","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb5cdb71.chunk.js","sourcesContent":["export default (row, col, bombs) => {\n  let board = [];\n  let mineLocation = [];\n  // Create blank board\n\n  // x = column\n  for (let x = 0; x < row; x++) {\n    let subCol = [];\n    for (let y = 0; y < col; y++) {\n      subCol.push({\n        value: 0,\n        revealed: false,\n        x: x,\n        y: y,\n        flagged: false,\n      });\n    }\n    board.push(subCol);\n  }\n\n  // Randomize Bomb Placement\n  let bombsCount = 0;\n  while (bombsCount < bombs) {\n    let x = randomNum(0, row - 1);\n    let y = randomNum(0, col - 1);\n\n    if (board[x][y].value === 0) {\n      board[x][y].value = \"X\";\n      mineLocation.push([x, y]);\n      bombsCount++;\n    }\n  }\n\n  // Add Numbers\n  for (let roww = 0; roww < row; roww++) {\n    for (let coll = 0; coll < col; coll++) {\n      if (board[roww][coll].value === \"X\") {\n        continue;\n      }\n\n      // Top\n      if (roww > 0 && board[roww - 1][coll].value === \"X\") {\n        board[roww][coll].value++;\n      }\n\n      // Top Right\n      if (\n        roww > 0 &&\n        coll < col - 1 &&\n        board[roww - 1][coll + 1].value === \"X\"\n      ) {\n        board[roww][coll].value++;\n      }\n\n      // Right\n      if (coll < col - 1 && board[roww][coll + 1].value === \"X\") {\n        board[roww][coll].value++;\n      }\n\n      // Botoom Right\n      if (\n        roww < row - 1 &&\n        coll < col - 1 &&\n        board[roww + 1][coll + 1].value === \"X\"\n      ) {\n        board[roww][coll].value++;\n      }\n\n      // Bottom\n      if (roww < row - 1 && board[roww + 1][coll].value === \"X\") {\n        board[roww][coll].value++;\n      }\n\n      // Bottom Left\n      if (\n        roww < row - 1 &&\n        coll > 0 &&\n        board[roww + 1][coll - 1].value === \"X\"\n      ) {\n        board[roww][coll].value++;\n      }\n\n      // LEft\n      if (coll > 0 && board[roww][coll - 1].value === \"X\") {\n        board[roww][coll].value++;\n      }\n\n      // Top Left\n      if (roww > 0 && coll > 0 && board[roww - 1][coll - 1].value === \"X\") {\n        board[roww][coll].value++;\n      }\n    }\n  }\n  return { board, mineLocation };\n};\n\nfunction randomNum(min = 0, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export const mineColor = () => {\n  let colors = [\"orange\", \"darkgreen\", \"cyan\", \"violet\", \"yellow\"];\n  return colors[Math.floor(Math.random() * colors.length)];\n};\n","import React from \"react\";\n\nexport default function Circle() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          height: 23,\n          width: 23,\n          borderRadius: 20,\n          background: \"rgba(0,0,0,0.4)\",\n        }}\n      ></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { mineColor } from \"../util/mineColor\";\nimport Circle from \"./circle\";\n\nexport default function Cell({ data, updateBoard, flagCell }) {\n  const style = {\n    block: {\n      width: 40,\n      height: 40,\n      color: numColorCode(data.value),\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontWeight: 800,\n      fontSize: 30,\n      cursor: \"pointer\",\n      background: data.revealed\n        ? data.value === \"X\"\n          ? mineColor()\n          : bombChexPattern(data.x, data.y)\n        : chexPattern(data.x, data.y),\n    },\n  };\n\n  const onClickUpdate = (e) => {\n    if (data.flagged) {\n      return;\n    }\n    console.log(e.type);\n    updateBoard(data.x, data.y);\n  };\n\n  const onClickFlag = (e) => {\n    e.preventDefault();\n    flagCell(data.x, data.y);\n  };\n\n  return (\n    <div\n      style={style.block}\n      onClick={(e) => onClickUpdate(e)}\n      onContextMenu={(e) => onClickFlag(e)}\n    >\n      {data.flagged && !data.revealed ? (\n        \"🚩\"\n      ) : data.revealed && data.value !== 0 ? (\n        data.value === \"X\" ? (\n          <Circle />\n        ) : (\n          data.value\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nconst chexPattern = (x, y) => {\n  if (x % 2 === 0 && y % 2 === 0) {\n    return \"#aad751\";\n  } else if (x % 2 === 0 && y % 2 !== 0) {\n    return \"#a2d249\";\n  } else if (x % 2 !== 0 && y % 2 === 0) {\n    return \"#a2d249\";\n  } else {\n    return \"#aad751\";\n  }\n};\n\nconst bombChexPattern = (x, y) => {\n  if (x % 2 === 0 && y % 2 === 0) {\n    return \"#e5c29f\";\n  } else if (x % 2 === 0 && y % 2 !== 0) {\n    return \"#d7b899\";\n  } else if (x % 2 !== 0 && y % 2 === 0) {\n    return \"#d7b899\";\n  } else {\n    return \"#e5c29f\";\n  }\n};\n\nconst numColorCode = (num) => {\n  if (num === 1) {\n    return \"#1976d2\";\n  } else if (num === 2) {\n    return \"#388d3c\";\n  } else if (num === 3) {\n    return \"#d33030\";\n  } else if (num === 4) {\n    return \"#7c21a2\";\n  } else if (num === 5) {\n    return \"#1976d2\";\n  } else if (num === 6) {\n    return \"#1976d2\";\n  } else {\n    return \"white\";\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nlet timeIntervalId;\nexport default function Timer({ gameOver, sendTime }) {\n  let [time, setTime] = useState(0);\n  let [sTime, setSTime] = useState(0);\n\n  useEffect(() => {\n    if (time > 0 && gameOver) {\n      setSTime(time);\n      setTime(0);\n    }\n  }, [gameOver, time]);\n\n  useEffect(() => {\n    const incrementTime = () => {\n      let newTime = time + 1;\n      setTime(newTime);\n    };\n    timeIntervalId = setTimeout(() => {\n      incrementTime();\n    }, 1000);\n    if (gameOver) {\n      //   let updatedTime = JSON.parse(JSON.stringify(time));\n\n      clearInterval(timeIntervalId);\n    }\n  }, [time, setTime, gameOver, sendTime]);\n\n  return (\n    <div style={{ color: \"white\", fontSize: 20 }}>\n      <span role=\"img\" aria-label=\"clock\" style={{ paddingRight: 10 }}>\n        ⏰\n      </span>\n      {gameOver ? sTime : time}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Timer from \"./Timer\";\n\nexport default function TopBar({ gameOver, setTime }) {\n  return (\n    <div\n      style={{\n        background: \"#4a752c\",\n        padding: \"10px 0\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n      }}\n    >\n      <span role=\"img\" aria-label=\"flag\" style={{ paddingBottom: 10 }}>\n        🚩\n      </span>\n      <Timer gameOver={gameOver} sendTime={setTime} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Modal({ reset, completeTime }) {\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1000);\n  }, []);\n  return (\n    <div\n      style={{\n        opacity: render ? 1 : 0,\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n        background: \"rgba(0,0,0,0.3)\",\n      }}\n    >\n      <div id=\"gameOverImage\"></div>\n      <div onClick={() => reset()} className=\"tryAgain\">\n        Try Again\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport createBoard from \"../util/createboard\";\nimport Cell from \"./Cell\";\nimport { revealed } from \"../util/reveal\";\nimport TopBar from \"./TopBar\";\nimport Modal from \"./Modal\";\nexport default function Board() {\n  const [board, setBoard] = useState([]);\n  const [mineLocations, setMineLocations] = useState([]);\n  const [nonMinesCount, setNonMinesCount] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [restart, setRestart] = useState(false);\n  const [newTime, setTime] = useState(0);\n\n  useEffect(() => {\n    const generateBoard = () => {\n      const getBoard = createBoard(10, 15, 20, setMineLocations);\n      setNonMinesCount(100 - 20);\n      setTime(0);\n      setBoard(getBoard.board);\n      setMineLocations(getBoard.mineLocation);\n      setGameOver(false);\n      setRestart(false);\n    };\n    generateBoard();\n  }, [restart, setRestart]);\n\n  const updateBoard = (x, y, e) => {\n    let newBoardValues = JSON.parse(JSON.stringify(board));\n    let newNonMinesCount = nonMinesCount;\n    if (newBoardValues[x][y].value === \"X\") {\n      for (let i = 0; i < mineLocations.length; i++) {\n        if (\n          !newBoardValues[mineLocations[i][0]][mineLocations[i][1]].revealed\n        ) {\n          // setInterval(() => {\n          newBoardValues[mineLocations[i][0]][\n            mineLocations[i][1]\n          ].revealed = true;\n          setBoard(newBoardValues);\n\n          // }, 500);\n        }\n      }\n      setGameOver(true);\n    } else {\n      // newBoardValues[x][y].revealed = true;\n      newBoardValues = revealed(newBoardValues, x, y, newNonMinesCount);\n      if (!newBoardValues) {\n        return;\n      }\n      setBoard(newBoardValues.arr);\n      setNonMinesCount(newBoardValues.newNonMinesCount);\n    }\n  };\n\n  const flagCell = (x, y) => {\n    let newBoardValues = JSON.parse(JSON.stringify(board));\n    newBoardValues[x][y].flagged = !newBoardValues[x][y].flagged;\n    setBoard(newBoardValues);\n  };\n\n  return (\n    <div\n      style={{ boxShadow: \"0 0 40px rgba(0,0,0,0.2)\", position: \"relative\" }}\n    >\n      {gameOver && <Modal reset={setRestart} completeTime={newTime} />}\n      <TopBar gameOver={gameOver} setTime={setTime} newTime={newTime} />\n      {board.map((row, inde) => {\n        return (\n          <div style={{ display: \"flex\" }} key={inde}>\n            {row.map((singleCell, index) => {\n              return (\n                <Cell\n                  key={index}\n                  data={singleCell}\n                  updateBoard={updateBoard}\n                  flagCell={flagCell}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","export const revealed = (arr, x, y, newNonMinesCount) => {\n  console.log(arr[x][y]);\n  if (arr[x][y].revealed) {\n    // console.log(arr[x][y])\n    return;\n  }\n  let flipped = [];\n  flipped.push(arr[x][y]);\n  while (flipped.length !== 0) {\n    let single = flipped.pop();\n\n    if (!single.revealed) {\n      newNonMinesCount--;\n      single.revealed = true;\n    }\n\n    if (single.value !== 0) {\n      break;\n    }\n\n    // setTimeout(() => {\n    if (\n      single.x > 0 &&\n      single.y > 0 &&\n      arr[single.x - 1][single.y - 1].value === 0 &&\n      !arr[single.x - 1][single.y - 1].revealed\n    ) {\n      flipped.push(arr[single.x - 1][single.y - 1]);\n    }\n    if (\n      single.x < arr.length - 1 &&\n      single.y < arr[0].length - 1 &&\n      arr[single.x + 1][single.y + 1].value === 0 &&\n      !arr[single.x + 1][single.y + 1].revealed\n    ) {\n      flipped.push(arr[single.x + 1][single.y + 1]);\n    }\n    if (\n      single.x < arr.length - 1 &&\n      single.y > 0 &&\n      arr[single.x + 1][single.y - 1].value === 0 &&\n      !arr[single.x + 1][single.y - 1].revealed\n    ) {\n      flipped.push(arr[single.x + 1][single.y - 1]);\n    }\n    if (\n      single.x > 0 &&\n      single.y < arr[0].length - 1 &&\n      arr[single.x - 1][single.y + 1].value === 0 &&\n      !arr[single.x - 1][single.y + 1].revealed\n    ) {\n      flipped.push(arr[single.x - 1][single.y + 1]);\n    }\n\n    // Single ones\n    if (\n      single.x > 0 &&\n      arr[single.x - 1][single.y].value === 0 &&\n      !arr[single.x - 1][single.y].revealed\n    ) {\n      flipped.push(arr[single.x - 1][single.y]);\n    }\n    if (\n      single.x < arr.length - 1 &&\n      arr[single.x + 1][single.y].value === 0 &&\n      !arr[single.x + 1][single.y].revealed\n    ) {\n      flipped.push(arr[single.x + 1][single.y]);\n    }\n    if (\n      single.y > 0 &&\n      arr[single.x][single.y - 1].value === 0 &&\n      !arr[single.x][single.y - 1].revealed\n    ) {\n      flipped.push(arr[single.x][single.y - 1]);\n    }\n    if (\n      single.y < arr[0].length - 1 &&\n      arr[single.x][single.y + 1].value === 0 &&\n      !arr[single.x][single.y + 1].revealed\n    ) {\n      flipped.push(arr[single.x][single.y + 1]);\n    }\n\n    // Start Revealing Items\n    if (\n      single.x > 0 &&\n      single.y > 0 &&\n      !arr[single.x - 1][single.y - 1].revealed\n    ) {\n      //Top Left Reveal\n\n      arr[single.x - 1][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (single.y > 0 && !arr[single.x][single.y - 1].revealed) {\n      // Top Reveal\n      arr[single.x][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (\n      single.x < arr.length - 1 &&\n      single.y > 0 &&\n      !arr[single.x + 1][single.y - 1].revealed\n    ) {\n      //Top Right Reveal\n      arr[single.x + 1][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (single.x > 0 && !arr[single.x - 1][single.y].revealed) {\n      //Left Reveal\n      arr[single.x - 1][single.y].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (single.x < arr.length - 1 && !arr[single.x + 1][single.y].revealed) {\n      // Right Reveal\n      arr[single.x + 1][single.y].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (\n      single.x > 0 &&\n      single.y < arr[0].length - 1 &&\n      !arr[single.x - 1][single.y + 1].revealed\n    ) {\n      // Bottom Left Reveal\n      arr[single.x - 1][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (single.y < arr[0].length - 1 && !arr[single.x][single.y + 1].revealed) {\n      //Bottom Reveal\n      arr[single.x][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    }\n\n    if (\n      single.x < arr.length - 1 &&\n      single.y < arr[0].length - 1 &&\n      !arr[single.x + 1][single.y + 1].revealed\n    ) {\n      // Bottom Right Reveal\n      arr[single.x + 1][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    }\n  }\n  //   console.log(arr);\n  return { arr, newNonMinesCount };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontFamily: \"Times New Roman\" }}>\n        Minesweeper</h1>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}